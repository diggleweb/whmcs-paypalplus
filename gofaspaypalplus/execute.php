<?php/**  * Módulo PayPal Plus por Mauricio Gofas (gofas.net) * @copyright Copyright (c) gofas.net 2016 * @see https://gofas.net * * Executa o pagamento * */// Report simple running errorserror_reporting( E_ERROR | E_WARNING | E_PARSE );// Require libraries needed for gateway module functions.require_once __DIR__ . '/../../../init.php';require_once __DIR__ . '/../../../includes/gatewayfunctions.php';require_once __DIR__ . '/../../../includes/invoicefunctions.php';use Illuminate\Database\Capsule\Manager as Capsule;// Parâmetros de configuração do gateway$gatewayParams	= getGatewayVariables('gofaspaypalplus');$sandbox		= $gatewayParams['sandboxmode'];if ( $sandbox ) {	$client_id			= $gatewayParams['clientidsandbox'];	$pp_host			= 'https://api.sandbox.paypal.com';}elseif( !$sandbox ) {	$client_id			= $gatewayParams['clientid'];	$pp_host			= 'https://api.paypal.com';}if( $gatewayParams['admin'] ) {	$whmcsAdmin			= $gatewayParams['admin'];}elseif( !$gatewayParams['admin'] ){	$whmcsAdmin 		= 1;}	// Morre se o módulo está inativo.if (!$gatewayParams['type']) {	die("Module Not Activated");}//check if the request is an AJAX requestfunction is_ajax() {	return isset($_SERVER['HTTP_X_REQUESTED_WITH']) && strtolower($_SERVER['HTTP_X_REQUESTED_WITH']) == 'xmlhttprequest';}if ( is_ajax() ) {				session_start();		$access_token				= $_SESSION['access_token'];		$payer_id					= $_POST["payer_id"];		$payment_id					= $_POST['payment_id'];		$pp_remembered_cards		= $_POST['pp_remembered_cards'];		$wh_remembered_cards		= $_POST['wh_remembered_cards'];		$user_id					= $_POST['user_id'];		$invoice_id					= $_POST['invoice_id'];		$efetuePayment				= '{ "payer_id" : "'.$payer_id.'" }';				$EPcurl = curl_init($pp_host.'/v1/payments/payment/'.$payment_id.'/execute/'); 		curl_setopt($EPcurl, CURLOPT_POST, true);		curl_setopt($EPcurl, CURLOPT_SSL_VERIFYPEER, false);		curl_setopt($EPcurl, CURLOPT_HEADER, false);		curl_setopt($EPcurl, CURLOPT_RETURNTRANSFER, true);		curl_setopt($EPcurl, CURLOPT_HTTPHEADER, array(			'Authorization: Bearer '.$access_token,			'Accept: application/json',			'Content-Type: application/json'		));			curl_setopt($EPcurl, CURLOPT_POSTFIELDS, $efetuePayment ); 				$EPresponse			= curl_exec( $EPcurl );		$EPerror			= curl_error( $EPcurl );		$EPinfo				= curl_getinfo( $EPcurl );				curl_close( $EPcurl ); // close cURL handler	    		if ( $EPerror ) {			echo 'Erro: '. print_r($EPerror);			die();		} 				$EParrayResponse	= json_decode( $EPresponse, true ); // JSON to PHP array		$EPpaytId			= $EParrayResponse['id'];		$paymentState		= $EParrayResponse['state'];		$EPsku				= $EParrayResponse['transactions']['0']['item_list']['items']['0']['sku'];		$EPamount			= $EParrayResponse['transactions']['0']['item_list']['items']['0']['price'];		$EPpaymentFee		= $EParrayResponse['transactions']['0']['related_resources']['0']['sale']['transaction_fee']['value'];		$EPpayState			= $EParrayResponse['transactions']['0']['related_resources']['0']['sale']['state'];				if( $paymentState === 'approved' ) {		//if( $paymentState === 'pending' ) {										echo $paymentState;			//echo 'approved';			// Adiciona o pagamento a fatura e Registra transação =)			addInvoicePayment(				$EPsku, // Invoice ID				$EPpaytId, // Transaction ID				$EPamount, // Payment Amount				$EPpaymentFee, // Payment Fee				$gatewayParams['paymentmethod']				);				}		// Pagamento pendente		elseif( $paymentState === 'pending' ) {		//elseif( $paymentState === 'approved' ) {							echo $paymentState;			//echo 'pending';						// Adiciona Transação "Aguardando confirmação"			$addtransaction = "addtransaction"; 			$addtransvalues['userid'] = $user_id; 			$addtransvalues['invoiceid'] = $invoice_id; 			$addtransvalues['description'] = "Aguardando confirmação da operadora do cartão."; 			$addtransvalues['amountin'] = '0.00'; 			$addtransvalues['fees'] = '0.00'; 			$addtransvalues['paymentmethod'] = 'gofaspaypalplus'; 			$addtransvalues['transid'] = $EPpaytId; 			$addtransvalues['date'] = date('d/m/Y');			$addtransresults = localAPI( $addtransaction, $addtransvalues, $whmcsAdmin );					}						// Salva remembered_cards ID		if ($pp_remembered_cards and !$wh_remembered_cards) {						try {				$add_wh_remembered_cards = Capsule::table('gofaspaypalplus')					->insert([					'user_id' => $user_id,					'payer_id' => $payer_id,					'remembered_cards' => $pp_remembered_cards,					 'api_clientid' => $client_id,					 ]);				//echo $add_wh_remembered_cards; // Debug							} catch (\Exception $e) {    			echo "Não foi possível gravar os dados do cartão do cliente. {$e->getMessage()}";			} 		} 				elseif ( $wh_remembered_cards and $pp_remembered_cards and $pp_remembered_cards !== $wh_remembered_cards) {			try {				$add_wh_remembered_cards = Capsule::table('gofaspaypalplus')					->where('user_id', $user_id)					->update([ 'remembered_cards' => $pp_remembered_cards ]);					//echo $add_wh_remembered_cards;  // Debug								} catch (\Exception $e) {    			echo "Não foi possível atualizar os dados do cartão do cliente. {$e->getMessage()}";			}		} // End Salva remembered_cards ID	}?>